/*******************************************************************************
SCRIPT NAME         lego_invoice_detail_views.sql 
 
LEGO OBJECT NAME    LEGO_INVOICE_DETAIL
 
CREATED             1/30/2013
 
ORIGINAL AUTHOR     Joe Pullifrone

***************************MODIFICATION HISTORY ********************************
 
09/04/2014 - J.Pullifrone - IQN-18776 - added payment_request_invdtl_id - Release 12.2.0 
   
*******************************************************************************/ 
CREATE OR REPLACE FORCE VIEW lego_invoice_detail_vw 
AS
SELECT lid.invoice_id,
       lid.invoice_header_id,
       lid.invoice_detail_id, 
       lid.invoice_date,
       lid.invoiced_agreement_id,               
       lid.buyer_invoice_number,
       lid.iqn_invoice_number,
       lid.timecard_id,
       lid.expense_report_id,
       lid.payment_request_id,
       lid.payment_request_invdtl_id,
       lid.milestone_invoice_id,
       lid.assignment_continuity_id,
       lid.expenditure_number,
       lid.buyer_org_id,
       lid.buyer_org_bill_to_addr_guid,
       lid.buyer_org_tax_id,
       lid.supplier_org_id,
       lid.supplier_org_pymnt_addr_guid,
       lid.supplier_org_tax_id,
       lid.org_sub_classification,
       lid.candidate_id,
       lid.customer_supplier_internal_id,      
       lid.service_identifier,
       lid.project_agreement_id,
       lid.buyer_taxable_country_id,
       lid.payee_org_id,
       lid.expense_report_line_item_id,
       lid.milestone_invoice_detail_id,
       lid.timecard_entry_id,
       lid.ariba_network_id,
       lid.hiring_mgr_person_id,
       lid.secjn_assignment_continuity_id,
       lid.secjn_project_agreement_id,
       lid.secjn_proj_agree_assgn_cont_id,
       lid.position_title,
       lid.accounting_code,
       lid.purchase_order,
       lid.cac1_segment1_value  AS cac1_segment_1_value,
       lid.cac1_segment1_desc   AS cac1_segment_1_desc,
       lid.cac1_segment2_value  AS cac1_segment_2_value,
       lid.cac1_segment2_desc   AS cac1_segment_2_desc,
       lid.cac1_segment3_value  AS cac1_segment_3_value,
       lid.cac1_segment3_desc   AS cac1_segment_3_desc,
       lid.cac1_segment4_value  AS cac1_segment_4_value,
       lid.cac1_segment4_desc   AS cac1_segment_4_desc,
       lid.cac1_segment5_value  AS cac1_segment_5_value,
       lid.cac1_segment5_desc   AS cac1_segment_5_desc,
       lid.cac2_segment1_value  AS cac2_segment_1_value,
       lid.cac2_segment1_desc   AS cac2_segment_1_desc,
       lid.cac2_segment2_value  AS cac2_segment_2_value,
       lid.cac2_segment2_desc   AS cac2_segment_2_desc,
       lid.cac2_segment3_value  AS cac2_segment_3_value,
       lid.cac2_segment3_desc   AS cac2_segment_3_desc,
       lid.cac2_segment4_value  AS cac2_segment_4_value,
       lid.cac2_segment4_desc   AS cac2_segment_4_desc,
       lid.cac2_segment5_value  AS cac2_segment_5_value,
       lid.cac2_segment5_desc   AS cac2_segment_5_desc,
       lid.expenditure_category,
       lid.rate_identifier_id,
       lid.rate_identifier_name,
       lid.expenditure_type,
       lid.invoice_transaction_type,
       lid.expense_type_name,
       lid.payment_type_name,
       lid.flexrate_type,
       lid.quantity,
       lid.week_ending_date,
       lid.expenditure_date,
       lid.bill_through_date,
       lid.approval_date,
       CASE
         WHEN lid.rate_identifier_id = 1 THEN lid.regular_hours
         WHEN lid.rate_identifier_id = 2 THEN lid.ot_hours
         WHEN lid.rate_identifier_id = 3 THEN lid.dt_hours
         WHEN lid.cs_hours IS NOT NULL   THEN lid.cs_hours 
         ELSE NULL
       END AS hours,
       rate_unit_desc,
       lid.adjusted_bill_rate,
       ROUND(lid.adjusted_bill_rate * NVL(cc.conversion_rate, 1), 2) AS adjusted_bill_rate_cc,
       lid.adjusted_cs_rate,
       ROUND(lid.adjusted_cs_rate * NVL(cc.conversion_rate, 1), 2) AS adjusted_cs_rate_cc,
       lid.adjusted_ot_rate,
       ROUND(lid.adjusted_ot_rate * NVL(cc.conversion_rate, 1), 2) AS adjusted_ot_rate_cc,
       lid.adjusted_dt_rate,
       ROUND(lid.adjusted_dt_rate * NVL(cc.conversion_rate, 1), 2) AS adjusted_dt_rate_cc,
       lid.reg_bill_rate,
       ROUND(lid.reg_bill_rate * NVL(cc.conversion_rate, 1), 2) AS reg_bill_rate_cc,
       lid.reg_pay_rate,
       ROUND(lid.reg_pay_rate * NVL(cc.conversion_rate, 1), 2) AS reg_pay_rate_cc,
       lid.supplier_reimb_bill_rate,
       ROUND(lid.supplier_reimb_bill_rate * NVL(cc.conversion_rate, 1), 2) AS supplier_reimb_bill_rate_cc,
       lid.flexrate_buyer_rate,
       ROUND(lid.flexrate_buyer_rate * NVL(cc.conversion_rate, 1), 2) AS flexrate_buyer_rate_cc,
       lid.buyer_fee_amount,
       ROUND(lid.buyer_fee_amount * NVL(cc.conversion_rate, 1), 2) AS buyer_fee_amount_cc,
       lid.supplier_fee_amount,
       ROUND(lid.supplier_fee_amount * NVL(cc.conversion_rate, 1), 2) AS supplier_fee_amount_cc,
       lid.total_fee_amount,
       ROUND(lid.total_fee_amount * NVL(cc.conversion_rate, 1), 2) AS total_fee_amount_cc,
       lid.flexrate_buyer_amount,
       ROUND(lid.flexrate_buyer_amount * NVL(cc.conversion_rate, 1), 2) AS flexrate_buyer_amount_cc,
       lid.flexrate_supplier_amount,
       ROUND(lid.flexrate_supplier_amount * NVL(cc.conversion_rate, 1), 2) AS flexrate_supplier_amount_cc,
       lid.payment_amount,
       ROUND(lid.payment_amount * NVL(cc.conversion_rate, 1), 2) AS payment_amount_cc,
       lid.markup_amount,
       ROUND(lid.markup_amount * NVL(cc.conversion_rate, 1), 2) AS markup_amount_cc,
       lid.bill_amount,
       ROUND(lid.bill_amount * NVL(cc.conversion_rate, 1), 2) AS bill_amount_cc,
       lid.buyer_adjusted_amount,
       ROUND(lid.buyer_adjusted_amount * NVL(cc.conversion_rate, 1), 2) AS buyer_adjusted_amount_cc,
       lid.supplier_reimbursement_amount,
       ROUND(lid.supplier_reimbursement_amount * NVL(cc.conversion_rate, 1), 2) AS supplier_reimburse_amount_cc,
       lid.flexrate_mgmt_fee_amount,
       ROUND(lid.flexrate_mgmt_fee_amount * NVL(cc.conversion_rate, 1), 2) AS flexrate_mgmt_fee_amount_cc,
       lid.buyer_tax_amount,
       ROUND(lid.buyer_tax_amount * NVL(cc.conversion_rate, 1), 2) AS buyer_tax_amount_cc,
       lid.supplier_tax_amount,
       ROUND(lid.supplier_tax_amount * NVL(cc.conversion_rate, 1), 2) AS supplier_tax_amount_cc,
       lid.mgmt_fee_tax_amount,
       ROUND(lid.mgmt_fee_tax_amount * NVL(cc.conversion_rate, 1), 2) AS mgmt_fee_tax_amount_cc,
       lid.buyer_discount_amount,
       ROUND(lid.buyer_discount_amount * NVL(cc.conversion_rate, 1), 2) AS buyer_discount_amount_cc,
       lid.supplier_discount_amount,
       ROUND(lid.supplier_discount_amount * NVL(cc.conversion_rate, 1), 2) AS supplier_discount_amount_cc,
       lid.buyer_fee_calc_percent,
       lid.supplier_fee_calc_percent,
       lid.total_fee_calc_percent,
       lid.partial_rate_percent,
       lid.sales_tax_amt_rollup,
       ROUND(lid.sales_tax_amt_rollup * NVL(cc.conversion_rate, 1), 2) AS sales_tax_amt_rollup_cc,
       lid.discount_amt_rollup,
       ROUND(lid.discount_amt_rollup * NVL(cc.conversion_rate, 1), 2) AS discount_amt_rollup_cc,
       lid.mfr_amt_rollup,
       ROUND(lid.mfr_amt_rollup * NVL(cc.conversion_rate, 1), 2) AS mfr_amt_rollup_cc,
       lid.sales_tax_amt_on_fee_rollup,
       ROUND(lid.sales_tax_amt_on_fee_rollup * NVL(cc.conversion_rate, 1), 2) AS sales_tax_amt_on_fee_rollup_cc,
       lid.currency_unit_id                                AS currency_id,
       lid.currency_code                                   AS currency,
       NVL(cc.converted_currency_id, lid.currency_unit_id) AS to_id_currency_id,
       NVL(cc.converted_currency_code, lid.currency_code)  AS to_id_currency,
       ROUND (NVL(cc.conversion_rate, 1), 6)               AS conversion_rate         
  FROM lego_invoice_detail_syn lid, 
       lego_currency_conv_rates_vw cc
 WHERE lid.currency_unit_id = cc.original_currency_id(+)
   AND lid.invoice_date >= ADD_MONTHS (TRUNC(SYSDATE), -(SELECT NVL(MIN(number_value),24) FROM lego_parameter WHERE parameter_name = 'months_in_refresh'))
/


               
